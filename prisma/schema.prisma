datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Product {
  id                 Int      @id @default(autoincrement())
  title              String   @unique @db.VarChar(255)
  brand              String?  @db.VarChar(255)
  category           String?  @db.VarChar(255)
  price              Decimal  @default(0.00) @db.Money
  discountPercentage Decimal? @default(0.00) @db.Decimal(5, 2)
  rating             Decimal? @db.Decimal(3, 2)
  stock              Int      @default(0)
  description        String?  @db.VarChar(255)
  thumbnail          String?  @db.VarChar(255)
  images             String[]
  // Order-Products = many-to-many
  orders             Order[]

  @@map("products")
}

model Customer {
  id        Int     @id @default(autoincrement())
  firstName String  @db.VarChar(255)
  lastName  String  @db.VarChar(255)
  email     String  @unique
  address   String  @db.VarChar(255)
  // Order-Customer = one-to-many
  orders    Order[]

  @@map("customers")
}

model Order {
  id         Int       @id @default(autoincrement())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  // Order-Products = many-to-many
  products   Product[]
  // Order-Customer = one-to-many
  // When a customer is deleted, all their orders are also deleted
  customer   Customer  @relation(fields: [customerId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  customerId Int
  // Order-Invoice = one-to-one
  invoice    Invoice?

  @@map("orders")
}

model Invoice {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  paymentDue DateTime @default(dbgenerated("NOW() + INTERVAL '30 days'"))
  paid       Boolean  @default(false)
  idNumber   String?  @db.VarChar(255)
  // Order-Invoice = one-to-one
  // When an order is deleted, the corresponding invoice is also deleted
  order      Order    @relation(fields: [orderId], references: [id], onUpdate: SetDefault, onDelete: Cascade)
  orderId    Int      @unique

  @@map("invoices")
}
